from snakemake.utils import min_version
min_version("7.0")

include: "rules/common.smk"

# load sample tsv file
# has header line: first must be "sample_accession"
# required columns (again tab separated):
#	sample_accession (SRS1234)
#	run_accession (SRR1234)
#	reference (hs111) # corresponds to the references.tsv file
# 	tech (10xv2, BULK, etc)
#	umi (yes / no)
#   workflow (standard, lammano, nac)
# 	everything else is optional after this
# you absolutely can process the same sample in multiple ways
# e.g. SRS1234 macaque_ref standard_workflow and SRS1234 human_ref nac_workflow
srr_sample_file = config['srr_sample_file']
SRS_dict = metadata_builder(srr_sample_file)
sample_names = list(SRS_dict.keys())

# load ref table
# used to match shorthand (hs111) to full ensembl/refseq/whatever gtf and fasta
# no header
# example hs111 <tab> http://.../Homo_sapiens.GRCh38.111.gtf.gz <tab> http://.../Homo_sapiens.GRCh38.111.fa.gz
ref_file = config['ref_file']
ref_dict = ref_builder(ref_file)

fastq_path = config['fastq_path']
quant_path = config['quant_path']


adata_outputs = []
for i in SRS_dict.keys():
	adata_outputs.append(quant_path + 
						 '/quant/' + 
						 i + '/' + SRS_dict[i]['ref'] + 
						 '/' + SRS_dict[i]['workflow'] + 
						 '/matrix.ec')


rule all:
	input:
		adata_outputs

include: "rules/kb.smk"
